---
import type { Card } from '../data/cards';
import OptimizedImage from './OptimizedImage.astro';
import { generatePlaceholder } from '../utils/imageUtils';

interface Props {
  card: Card;
  isDetailed?: boolean;
}

const { card, isDetailed = false } = Astro.props;

// Gera um placeholder para quando a imagem não estiver disponível
const placeholderImage = generatePlaceholder('#e2e8f0', 800, 450);

// Define a URL da imagem (usa o placeholder se não houver imageUrl)
const imageUrl = card.imageUrl || placeholderImage;
---

<div class="h-full animate-on-scroll" data-animation="fadeInUp">
  <a 
    href={`/area/${card.slug}`} 
    class="block h-full bg-white rounded-xl shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-2 card-hover"
    aria-labelledby={`card-title-${card.id}`}
  >
    <div class="relative overflow-hidden aspect-video">
      <!-- Efeito de blob decorativo -->
      <div class="absolute -top-6 -right-6 w-32 h-32 bg-indigo-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>
      <div class="absolute -bottom-8 -left-8 w-32 h-32 bg-pink-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>
      
      <div class="relative">
        <OptimizedImage 
          src={imageUrl} 
          alt={card.title} 
          width={800} 
          height={450} 
          class="w-full h-full object-cover transition-transform duration-500 hover:scale-105"
          loading="lazy"
          decoding="async"
          fetchpriority={card.id <= 2 ? "high" : "auto"}
        />
        
        <!-- Badge de destaque -->
        {card.id === 1 && (
          <div class="absolute top-4 right-4 bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md">
            Destaque
          </div>
        )}
      </div>
    </div>
    
    <div class="p-6 h-full flex flex-col">
      <h2 id={`card-title-${card.id}`} class="text-xl font-bold text-gray-800 mb-2 font-heading">{card.title}</h2>
      <p class="text-gray-600 mb-4">{card.description}</p>
      
      {isDetailed && (
        <div class="mt-4 pt-4 border-t border-gray-200">
          <p class="text-gray-700">{card.content}</p>
        </div>
      )}
      
      {!isDetailed && (
        <div class="mt-auto pt-4">
          <span class="inline-block gradient-primary text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:shadow-lg transform hover:-translate-y-1">
            Ver detalhes
          </span>
        </div>
      )}
    </div>
  </a>
</div>

<style>
@keyframes blob {
  0%, 100% { transform: translate(0, 0) scale(1); }
  25% { transform: translate(10px, -10px) scale(1.1); }
  50% { transform: translate(0, 10px) scale(0.9); }
  75% { transform: translate(-10px, -10px) scale(1.05); }
}

.animate-blob {
  animation: blob 7s infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

.font-heading {
  font-family: var(--font-heading);
}
</style>